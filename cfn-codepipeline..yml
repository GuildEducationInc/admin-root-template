AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Description: Environment to where the codepipeline is deployed to
    Default: dev
    AllowedValues: ['dev', 'staging', 'prod']
  GithubRepo:
    Type: String
    Description: "Github repo name"
    Default: guild-admin-root-template
  SubDomain:
    Type: String
    Description: "SubDomain of URL that will serve this application. For example, in the case admin.guildeducation.com, admin is the SubDomain"
    Default: test
  GithubBranch:
    Type: String
    Default: testBranch
  CodePipelineRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /IAM/Role/guild-admin-platform/root-admin-codepipeline-role/Arn
  PipelineBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /S3/Bucket/guild-admin-platform/pipeline-bucket/Name
  CodeBuildArtifact:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /Codebuild/Project/guild-admin-platform/root-admin-code-build-artifact/Name
  BundleBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /S3/Bucket/guild-admin-platform/admin-bundle-bucket/Name

Conditions:
  IsDev: !Equals [!Ref Environment, 'dev']
  IsStaging: !Equals [!Ref Environment, 'staging']
  IsDevOrStaging: !Or
    - !Condition IsStaging
    - !Condition IsDev

Mappings:
  environment:
    dev:
      domain: 'guildacceptance.com'
    staging:
      domain: 'guildacceptance.com'
    prod:
      domain: 'guildeducation.com'

Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref CodePipelineRole
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: GithubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: RootSource
              Configuration:
                Owner: '{{resolve:secretsmanager:/devops/bootstrapper/github-info:SecretString:GitHubOwner}}'
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                OAuthToken: '{{resolve:secretsmanager:/devops/bootstrapper/github-info:SecretString:GitHubOAuthToken}}'

        - Name: Build
          Actions:
            - Name: BuildArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: RootSource
              OutputArtifacts:
                - Name: RootSourceEnvBuild
              Configuration:
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ROOT_APP", "value": "${GithubRepo}"},
                    {"name": "BUNDLE_BUCKET", "value": "${BundleBucket}"}
                  ]
                ProjectName: !Ref CodeBuildArtifact
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: RootSourceEnvBuild
              Configuration:
                BucketName: !Ref RootAppHostingBucket
                Extract: true
  CodePipelineNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: !Ref CodePipeline
      Name: !Sub "/CodePipeline/Pipeline/root-pipeline/${GithubRepo}/Name"
      Tags: 
        repo_name: !Ref GithubRepo
        owner: Internal-Tools

  RootAppHostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
          - "${SubDomain}.${HostedZoneName}"
          - HostedZoneName: !FindInMap ["environment", !Ref Environment, "domain"]
            SubDomain: !If [IsDevOrStaging, !Sub "${SubDomain}-${Environment}", !Sub "${SubDomain}"]
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  HostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RootAppHostingBucket
      PolicyDocument:
        Id: HostingBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: CloudFlareReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub "arn:aws:s3:::${RootAppHostingBucket}/*"
            Condition:
              IpAddress:
                aws:SourceIp:
                  # For more information on CloudFlare IPs https://www.cloudflare.com/ips/
                  - 2400:cb00::/32
                  - 2405:8100::/32
                  - 2405:b500::/32
                  - 2606:4700::/32
                  - 2803:f800::/32
                  - 2c0f:f248::/32
                  - 2a06:98c0::/29
                  - 103.21.244.0/22
                  - 103.22.200.0/22
                  - 103.31.4.0/22
                  - 104.16.0.0/12
                  - 108.162.192.0/18
                  - 131.0.72.0/22
                  - 141.101.64.0/18
                  - 162.158.0.0/15
                  - 172.64.0.0/13
                  - 173.245.48.0/20
                  - 188.114.96.0/20
                  - 190.93.240.0/20
                  - 197.234.240.0/22
                  - 198.41.128.0/17
